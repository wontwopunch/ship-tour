<%- include('layouts/navbar') %>
<div class="container">
  <h1>월별 좌석 현황</h1>

  <!-- 필터링 옵션 -->
  <div class="filters">
    <label for="monthSelect">월 선택:</label>
    <select id="monthSelect" onchange="applyFilters()">
      <% for (let i = 1; i <= 12; i++) { %>
        <option value="<%= i %>" <%= currentMonth == i ? 'selected' : '' %>><%= i %>월</option>
      <% } %>
    </select>
  </div>
  <button onclick="saveBlockData()">블럭 데이터 저장</button>

  <!-- 테이블 -->
  <div class="table-container">
    <table border="1">
      <thead>
        <tr>
          <th>날짜</th>
          <th colspan="9">포항출항</th>
          <th colspan="9">울릉출항</th>
        </tr>
        <tr>
          <th>월/일/요일</th>
          <th>예약 이코</th>
          <th>블럭 이코</th>
          <th>잔여 이코</th>
          <th>예약 비즈</th>
          <th>블럭 비즈</th>
          <th>잔여 비즈</th>
          <th>예약 퍼스</th>
          <th>블럭 퍼스</th>
          <th>잔여 퍼스</th>
          <th>예약 이코</th>
          <th>블럭 이코</th>
          <th>잔여 이코</th>
          <th>예약 비즈</th>
          <th>블럭 비즈</th>
          <th>잔여 비즈</th>
          <th>예약 퍼스</th>
          <th>블럭 퍼스</th>
          <th>잔여 퍼스</th>
        </tr>
      </thead>
      <tbody>
        <% data.forEach(row => { %>
          <tr>
            <!-- 날짜 -->
            <td>
              <%= row.date %> 
              (<%= ['일', '월', '화', '수', '목', '금', '토'][new Date(row.date).getDay()] %>)
            </td>

            <!-- 포항출항 -->
            <td><%= row.departure.economy || 0 %></td>
            <td><input type="number" value="<%= row.departure.ecoBlock || 0 %>" data-field="departure.ecoBlock" oninput="updateRemaining(this, 'departure', 'economy')"></td>
            <td data-field="departure.remainingEco"><%= (row.departure.ecoBlock || 0) - (row.departure.economy || 0) %></td>
            <td><%= row.departure.business || 0 %></td>
            <td><input type="number" value="<%= row.departure.bizBlock || 0 %>" data-field="departure.bizBlock" oninput="updateRemaining(this, 'departure', 'business')"></td>
            <td data-field="departure.remainingBiz"><%= (row.departure.bizBlock || 0) - (row.departure.business || 0) %></td>
            <td><%= row.departure.first || 0 %></td>
            <td><input type="number" value="<%= row.departure.firstBlock || 0 %>" data-field="departure.firstBlock" oninput="updateRemaining(this, 'departure', 'first')"></td>
            <td data-field="departure.remainingFirst"><%= (row.departure.firstBlock || 0) - (row.departure.first || 0) %></td>

            <!-- 울릉출항 -->
            <td><%= row.arrival.economy || 0 %></td>
            <td><input type="number" value="<%= row.arrival.ecoBlock || 0 %>" data-field="arrival.ecoBlock" oninput="updateRemaining(this, 'arrival', 'economy')"></td>
            <td data-field="arrival.remainingEco"><%= (row.arrival.ecoBlock || 0) - (row.arrival.economy || 0) %></td>
            <td><%= row.arrival.business || 0 %></td>
            <td><input type="number" value="<%= row.arrival.bizBlock || 0 %>" data-field="arrival.bizBlock" oninput="updateRemaining(this, 'arrival', 'business')"></td>
            <td data-field="arrival.remainingBiz"><%= (row.arrival.bizBlock || 0) - (row.arrival.business || 0) %></td>
            <td><%= row.arrival.first || 0 %></td>
            <td><input type="number" value="<%= row.arrival.firstBlock || 0 %>" data-field="arrival.firstBlock" oninput="updateRemaining(this, 'arrival', 'first')"></td>
            <td data-field="arrival.remainingFirst"><%= (row.arrival.firstBlock || 0) - (row.arrival.first || 0) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <button onclick="downloadExcel()">엑셀 다운로드</button>
</div>

<script>
  function applyFilters() {
    const month = document.getElementById('monthSelect').value;
    window.location.href = `/status/monthly?month=${month}`;
  }

  function downloadExcel() {
    const month = document.getElementById('monthSelect').value;
    window.location.href = `/status/monthly/export?month=${month}`;
  }

  function updateRemaining(input, type, category) {
    const row = input.closest('tr');
    const blockValue = parseInt(input.value || 0, 10);
    const reservedValue = parseInt(row.querySelector(`[data-field="${type}.${category}"]`).innerText || 0, 10);
    const remainingCell = row.querySelector(`[data-field="${type}.remaining${capitalize(category)}"]`);
    
    if (remainingCell) {
      remainingCell.innerText = blockValue - reservedValue;
      remainingCell.style.color = (blockValue - reservedValue) < 0 ? 'red' : 'inherit';
    }
  }

  function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  function saveBlockData() {
    const rows = document.querySelectorAll('tbody tr');
    const updates = [];

    rows.forEach((row) => {
      const date = row.querySelector('td:first-child')?.innerText.trim();
      if (!date) return;

      updates.push({
        date,
        departure: {
          ecoBlock: parseInt(row.querySelector('[data-field="departure.ecoBlock"]')?.value || 0, 10),
          bizBlock: parseInt(row.querySelector('[data-field="departure.bizBlock"]')?.value || 0, 10),
          firstBlock: parseInt(row.querySelector('[data-field="departure.firstBlock"]')?.value || 0, 10),
        },
        arrival: {
          ecoBlock: parseInt(row.querySelector('[data-field="arrival.ecoBlock"]')?.value || 0, 10),
          bizBlock: parseInt(row.querySelector('[data-field="arrival.bizBlock"]')?.value || 0, 10),
          firstBlock: parseInt(row.querySelector('[data-field="arrival.firstBlock"]')?.value || 0, 10),
        },
      });
    });

    fetch('/monthly/update-block', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ updates }),
    })
      .then((response) => {
        if (!response.ok) throw new Error('Failed to update block data');
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          alert('블럭 데이터가 저장되었습니다.');
          location.reload();
        } else {
          alert('블럭 데이터 저장 중 오류가 발생했습니다.');
        }
      })
      .catch((error) => {
        console.error('Error saving block data:', error);
        alert('블럭 데이터 저장 중 오류가 발생했습니다.');
      });
  }
</script>

<style>
  .filters {
    margin-bottom: 20px;
    display: flex;
    gap: 15px;
    align-items: center;
  }

  .table-container {
    margin-top: 20px;
    overflow-x: auto;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    text-align: center;
  }

  table th {
    background-color: #007bff;
    color: white;
    padding: 10px;
  }

  table td {
    padding: 8px;
  }

  table tr:nth-child(even) {
    background-color: #f2f2f2;
  }

  table tr:hover {
    background-color: #eef;
  }

  button {
    margin-top: 20px;
    padding: 10px 15px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  button:hover {
    background-color: #218838;
  }
</style>
