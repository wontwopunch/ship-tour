<%- include('layouts/navbar') %>
<div class="container">
  <h1>월별 좌석 현황</h1>

  <!-- 필터링 옵션 -->
  <div class="filters">
    <label for="monthSelect">월 선택:</label>
    <select id="monthSelect" onchange="applyFilters()">
      <% for (let i = 1; i <= 12; i++) { %>
        <option value="<%= i %>" <%= currentMonth == i ? 'selected' : '' %>><%= i %>월</option>
      <% } %>
    </select>
  </div>
  <button onclick="saveBlockData()">블럭 데이터 저장</button>
  
  <!-- 테이블 -->
  <div class="table-container">
    <table border="1">
      <thead>
        <tr>
          <th>날짜</th>
          <th colspan="9">포항출항</th>
          <th colspan="9">울릉출항</th>
        </tr>
        <tr>
          <th>월/일/요일</th>
          <th>예약 이코</th>
          <th>블럭 이코</th>
          <th>잔여 이코</th>
          <th>예약 비즈</th>
          <th>블럭 비즈</th>
          <th>잔여 비즈</th>
          <th>예약 퍼스</th>
          <th>블럭 퍼스</th>
          <th>잔여 퍼스</th>
          <th>예약 이코</th>
          <th>블럭 이코</th>
          <th>잔여 이코</th>
          <th>예약 비즈</th>
          <th>블럭 비즈</th>
          <th>잔여 비즈</th>
          <th>예약 퍼스</th>
          <th>블럭 퍼스</th>
          <th>잔여 퍼스</th>
        </tr>
      </thead>
      <tbody>
        <% data.forEach(row => { %>
          <tr>
            <td>
              <%= row.date %> 
              (<%= ['일', '월', '화', '수', '목', '금', '토'][new Date(row.date).getDay()] %>)
            </td>
            <!-- 포항출항 -->
            <td><%= row.departure.economy || 0 %></td>
            <td><input type="number" value="<%= row.departure.ecoBlock || 0 %>" data-field="departure.ecoBlock"></td>
            <td><%= (row.departure.ecoBlock || 0) - (row.departure.economy || 0) %></td>
            <td><%= row.departure.business || 0 %></td>
            <td><input type="number" value="<%= row.departure.bizBlock || 0 %>" data-field="departure.bizBlock"></td>
            <td><%= (row.departure.bizBlock || 0) - (row.departure.business || 0) %></td>
            <td><%= row.departure.first || 0 %></td>
            <td><input type="number" value="<%= row.departure.firstBlock || 0 %>" data-field="departure.firstBlock"></td>
            <td><%= (row.departure.firstBlock || 0) - (row.departure.first || 0) %></td>
            <!-- 울릉출항 -->
            <td><%= row.arrival.economy || 0 %></td>
            <td><input type="number" value="<%= row.arrival.ecoBlock || 0 %>" data-field="arrival.ecoBlock"></td>
            <td><%= (row.arrival.ecoBlock || 0) - (row.arrival.economy || 0) %></td>
            <td><%= row.arrival.business || 0 %></td>
            <td><input type="number" value="<%= row.arrival.bizBlock || 0 %>" data-field="arrival.bizBlock"></td>
            <td><%= (row.arrival.bizBlock || 0) - (row.arrival.business || 0) %></td>
            <td><%= row.arrival.first || 0 %></td>
            <td><input type="number" value="<%= row.arrival.firstBlock || 0 %>" data-field="arrival.firstBlock"></td>
            <td><%= (row.arrival.firstBlock || 0) - (row.arrival.first || 0) %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <button onclick="downloadExcel()">엑셀 다운로드</button>
</div>

<script>
  function applyFilters() {
    const month = parseInt(document.getElementById('monthSelect').value, 10);
    if (isNaN(month) || month < 1 || month > 12) {
      alert('유효한 월을 선택하세요.');
      return;
    }
    window.location.href = `/status/monthly?month=${month}`;
  }

  function downloadExcel() {
    const month = document.getElementById('monthSelect').value;
    window.location.href = `/status/monthly/export?month=${month}`;
  }

  document.querySelectorAll('input[type="number"]').forEach(input => {
    input.addEventListener('input', (event) => {
      const row = event.target.closest('tr');
      const type = input.getAttribute('data-field').startsWith('departure') ? 'departure' : 'arrival';
      calculateRemainingSeats(row, type);
    });
    input.addEventListener('blur', (event) => {
      const row = event.target.closest('tr');
      const field = event.target.getAttribute('data-field');
      const value = parseInt(event.target.value, 10);
      updateServer(row, field, value);
    });
  });

  function calculateRemainingSeats(row, type) {
    const economy = parseInt(row.querySelector(`[data-field="${type}.ecoBlock"]`).value, 10) - parseInt(row.querySelector(`[data-field="${type}.economy"]`).innerText, 10);
    const biz = parseInt(row.querySelector(`[data-field="${type}.bizBlock"]`).value, 10) - parseInt(row.querySelector(`[data-field="${type}.business"]`).innerText, 10);
    const first = parseInt(row.querySelector(`[data-field="${type}.firstBlock"]`).value, 10) - parseInt(row.querySelector(`[data-field="${type}.first"]`).innerText, 10);
    row.querySelector(`[data-field="${type}.remainingEco"]`).innerText = economy;
    row.querySelector(`[data-field="${type}.remainingBiz"]`).innerText = biz;
    row.querySelector(`[data-field="${type}.remainingFirst"]`).innerText = first;
  }

  function updateServer(row, field, value) {
    const date = row.querySelector('td:first-child').innerText.trim();
    fetch('/status/monthly/update-block', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ date, field, value })
    }).catch(error => console.error(error));
  }
</script>
